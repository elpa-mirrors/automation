name: Mirror repositories
on:
  workflow_dispatch:
  schedule:
    - cron: '11 1/6 * * *'
concurrency:
  group: ${{ github.workflow }}
jobs:
  mirror:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: elpa
            url: git://cgit.git.savannah.gnu.org/emacs/elpa.git/
            mirror: false
            delay: 7
          - name: nongnu
            url: git://cgit.git.savannah.gnu.org/emacs/nongnu.git/
            mirror: false
            delay: 37
          - name: org-mode
            url: git://cgit.git.savannah.gnu.org/emacs/org-mode.git/
            mirror: true
            delay: 72

    steps:
      - name: Configure
        id: config
        run: |
          if [[ ${{ matrix.mirror }} = true ]]; then
            {
              echo working_dir=${{ matrix.name }}.git
              echo flag=--mirror
              echo upstream_flag=--mirror=fetch
              echo fetch_operation=fetch
              echo fetch_arg=-v
            } >> "$GITHUB_OUTPUT"
          else
            {
              echo working_dir=${{ matrix.name }}
              echo flag=
              echo upstream_flag=
              echo fetch_operation=pull
              echo fetch_arg=HEAD
            } >> "$GITHUB_OUTPUT"
          fi

      - name: Cache the repository
        id: cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ${{ steps.config.outputs.working_dir }}
          key: ${{ matrix.name }}-1

      - name: Delay
        run: sleep "${{ matrix.delay }}"

      - name: Clone from GitHub
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git clone ${{ steps.config.outputs.flag }} --filter=blob:none \
            https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository_owner }}/${{ matrix.name }}.git \
            ${{ steps.config.outputs.working_dir }}
          cd ${{ steps.config.outputs.working_dir }}
          git remote add ${{ steps.config.outputs.upstream_flag }} \
            upstream ${{ matrix.url }}

      - name: Fetch from the upstream
        working-directory: ${{ steps.config.outputs.working_dir }}
        run: |
          git config remote.upstream.promisor true
          git config remote.upstream.partialclonefilter blob:none
          git ${{ steps.config.outputs.fetch_operation }} \
            --prune upstream ${{ steps.config.outputs.fetch_arg }}

      - name: Push
        working-directory: ${{ steps.config.outputs.working_dir }}
        run: |
          git push --force origin --all
